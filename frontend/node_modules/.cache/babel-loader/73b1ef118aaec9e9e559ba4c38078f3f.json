{"ast":null,"code":"var _jsxFileName = \"/home/frankessien/myworkspace/food-delivery-api/frontend/src/context/user_context.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useAuthContext } from './auth_context.js';\nimport { useFoodsContext } from '../context/foods_context.js';\nimport { useNavigate } from 'react-router-dom';\nconst UserContext = React.createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  const [myUser, setMyUser] = useState({});\n  const {\n    register,\n    login,\n    user\n  } = useAuthContext();\n  const {\n    registerUser,\n    state,\n    email,\n    password,\n    is_registered\n  } = useAuthContext();\n  const [checkRegister, setCheckRegister] = useState(is_registered);\n  const fetchFoods = useFoodsContext();\n  // let navigate = useNavigate()\n\n  useEffect(() => {\n    console.log('User from  userContext', user);\n    setMyUser(user);\n    if (is_registered) {\n      setCheckRegister(true);\n    }\n  }, [user, is_registered]);\n  const handleNavigate = () => {\n    if (user || myUser) {\n      console.log('This  is from  the     fetching Data  if  user  is Available', user, 'And  my user Data ', myUser, 'CHECkING  IS REGISTERED', is_registered, 'CHECK rEGISTER VARIABLE', checkRegister);\n      // fetchFoods()\n      // navigate('/') // Use navigate to redirect to a specific path\n    }\n  };\n  console.log('CHECkING  IS REGISTERED', is_registered, 'CHECK rEGISTER VARIABLE', checkRegister);\n  console.log('User1 this works', user);\n  console.log('User2 this does not work', myUser);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      myUser,\n      register,\n      login,\n      user,\n      handleNavigate,\n      checkRegister,\n      is_registered\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useUserContext = () => {\n  return useContext(UserContext);\n};","map":{"version":3,"names":["React","useContext","useEffect","useState","useAuthContext","useFoodsContext","useNavigate","UserContext","createContext","UserProvider","children","myUser","setMyUser","register","login","user","registerUser","state","email","password","is_registered","checkRegister","setCheckRegister","fetchFoods","console","log","handleNavigate","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useUserContext"],"sources":["/home/frankessien/myworkspace/food-delivery-api/frontend/src/context/user_context.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useAuthContext } from './auth_context.js'\nimport { useFoodsContext } from '../context/foods_context.js'\nimport { useNavigate } from 'react-router-dom'\n\nconst UserContext = React.createContext()\n\nexport const UserProvider = ({ children }) => {\n  const [myUser, setMyUser] = useState({})\n  const { register, login, user } = useAuthContext()\n  const { registerUser, state, email, password, is_registered } =\n    useAuthContext()\n  const [checkRegister, setCheckRegister] = useState(is_registered)\n\n  const fetchFoods = useFoodsContext()\n  // let navigate = useNavigate()\n\n  useEffect(() => {\n    console.log('User from  userContext', user)\n    setMyUser(user)\n    if (is_registered) {\n      setCheckRegister(true)\n    }\n  }, [user, is_registered])\n  const handleNavigate = () => {\n    if (user || myUser) {\n      console.log(\n        'This  is from  the     fetching Data  if  user  is Available',\n        user,\n        'And  my user Data ',\n        myUser,\n        'CHECkING  IS REGISTERED',\n        is_registered,\n        'CHECK rEGISTER VARIABLE',\n        checkRegister\n      )\n      // fetchFoods()\n      // navigate('/') // Use navigate to redirect to a specific path\n    }\n  }\n  console.log(\n    'CHECkING  IS REGISTERED',\n    is_registered,\n    'CHECK rEGISTER VARIABLE',\n    checkRegister\n  )\n\n  console.log('User1 this works', user)\n  console.log('User2 this does not work', myUser)\n\n  return (\n    <UserContext.Provider\n      value={{\n        myUser,\n        register,\n        login,\n        user,\n        handleNavigate,\n        checkRegister,\n        is_registered\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport const useUserContext = () => {\n  return useContext(UserContext)\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM;IAAEU,QAAQ;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,cAAc,CAAC,CAAC;EAClD,MAAM;IAAEY,YAAY;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GAC3DhB,cAAc,CAAC,CAAC;EAClB,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAACiB,aAAa,CAAC;EAEjE,MAAMG,UAAU,GAAGlB,eAAe,CAAC,CAAC;EACpC;;EAEAH,SAAS,CAAC,MAAM;IACdsB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEV,IAAI,CAAC;IAC3CH,SAAS,CAACG,IAAI,CAAC;IACf,IAAIK,aAAa,EAAE;MACjBE,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC,EAAE,CAACP,IAAI,EAAEK,aAAa,CAAC,CAAC;EACzB,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIX,IAAI,IAAIJ,MAAM,EAAE;MAClBa,OAAO,CAACC,GAAG,CACT,8DAA8D,EAC9DV,IAAI,EACJ,oBAAoB,EACpBJ,MAAM,EACN,yBAAyB,EACzBS,aAAa,EACb,yBAAyB,EACzBC,aACF,CAAC;MACD;MACA;IACF;EACF,CAAC;EACDG,OAAO,CAACC,GAAG,CACT,yBAAyB,EACzBL,aAAa,EACb,yBAAyB,EACzBC,aACF,CAAC;EAEDG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEV,IAAI,CAAC;EACrCS,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEd,MAAM,CAAC;EAE/C,oBACEX,KAAA,CAAA2B,aAAA,CAACpB,WAAW,CAACqB,QAAQ;IACnBC,KAAK,EAAE;MACLlB,MAAM;MACNE,QAAQ;MACRC,KAAK;MACLC,IAAI;MACJW,cAAc;MACdL,aAAa;MACbD;IACF,CAAE;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDzB,QACmB,CAAC;AAE3B,CAAC;AAED,OAAO,MAAM0B,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOnC,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module"}