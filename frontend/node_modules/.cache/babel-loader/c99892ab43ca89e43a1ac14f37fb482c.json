{"ast":null,"code":"var _jsxFileName = \"/home/frankessien/myworkspace/food-delivery-api/frontend/src/context/foods_context.js\";\n/* trunk-ignore-all(prettier) */\nimport axios from 'axios';\n// import cookieParser from 'cookie-parser'\n\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { foods_url as url, single_food_url as single_url } from '../utils/constants';\nimport { GET_FOODS_BEGIN, GET_FOODS_SUCCESS, GET_SINGLE_FOOD_SUCCESS, GET_SINGLE_FOOD_BEGIN, GET_SINGLE_FOOD_ERROR, SEARCH_FOODS, GET_FOODS_ERROR, UPDATE_SORT } from '../actions.js';\nimport foods_reducer from '../reducers/foods_reducer';\n\n//set initial state that would be passed\nconst initialState = {\n  foods_loading: false,\n  foods_error: false,\n  foods: [],\n  single_food_error: false,\n  single_food_loading: false,\n  single_food: {}\n};\n\n//declare global context and  make it  Available Globally\n// also here, Set All  the Actions using Dispatch\nexport const FoodsContext = React.createContext();\n\n//creating FoodsProvider\nexport const FoodsProvider = ({\n  children\n}) => {\n  //pass in  reducerFunction , and  initial state Object\n  //NOTE:create and  import foodsReducer, so  you can  use  in  this useReducerFunction\n  const [state, dispatch] = useReducer(foods_reducer, initialState);\n  // const { token } = useAuthContext()\n  const [userTokenData, setUserToken] = useState(null);\n  const [foodsData, setFoodsData] = useState([]);\n\n  //fetch Data from API   using axios\n\n  const fetchFoods = async () => {\n    console.log('TYPE 1 FOR TOKEN', typeof localStorage.getItem('token'));\n    //NOTE: convert  to  valid  json String Object: this would   would enable  possible read from  the Backend;\n    // if   allocated directly without  using  JSON.parse, it would  read \"null\"from  the  backend\n\n    // let retrievedToken = JSON.parse(localStorage.getItem('token'))\n\n    try {\n      dispatch({\n        type: GET_FOODS_BEGIN\n      });\n      console.log(userTokenData);\n      // console.log(configuration)\n      const response = await axios.get(url);\n      const foods = response.data;\n      console.log('FETCH FOODS  ', foods);\n      setFoodsData(foods);\n      dispatch({\n        type: GET_FOODS_SUCCESS,\n        payload: foods\n      });\n    } catch (error) {\n      console.log('TOKEN CALL TO API FROM   FOODS');\n      console.log('Error fetching foods', error.message);\n      dispatch({\n        type: GET_FOODS_ERROR,\n        payload: error.message\n      });\n    }\n  };\n  useEffect(() => {\n    fetchFoods();\n  }, [userTokenData]);\n  //end here\n  const fetchSingleFood = async single_url => {\n    dispatch({\n      type: GET_SINGLE_FOOD_BEGIN\n    });\n    try {\n      const response = await axios.get(single_url);\n      const singleFood = response.data;\n      dispatch({\n        type: GET_SINGLE_FOOD_SUCCESS,\n        payload: singleFood\n      });\n      console.log('Single Food fetched', singleFood);\n    } catch (error) {\n      console.log('Single Food  Error', error.message);\n      dispatch({\n        type: GET_SINGLE_FOOD_ERROR,\n        payload: error.message\n      });\n    }\n  };\n  const updateSort = e => {\n    const value = e.target.value;\n    console.log('Value from  sort  is', value);\n    dispatch({\n      type: UPDATE_SORT,\n      payload: {\n        value\n      }\n    });\n  };\n  console.log('Token after Mount from  foodContext ', 'USERtOKEN IS', userTokenData);\n  return /*#__PURE__*/React.createElement(FoodsContext.Provider, {\n    value: {\n      ...state,\n      fetchSingleFood,\n      fetchFoods,\n      updateSort,\n      foodsData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n//to make  the Foods context Available Globally, export from here, make it Available\nexport const useFoodsContext = () => {\n  return useContext(FoodsContext);\n};","map":{"version":3,"names":["axios","React","useContext","useEffect","useReducer","useState","foods_url","url","single_food_url","single_url","GET_FOODS_BEGIN","GET_FOODS_SUCCESS","GET_SINGLE_FOOD_SUCCESS","GET_SINGLE_FOOD_BEGIN","GET_SINGLE_FOOD_ERROR","SEARCH_FOODS","GET_FOODS_ERROR","UPDATE_SORT","foods_reducer","initialState","foods_loading","foods_error","foods","single_food_error","single_food_loading","single_food","FoodsContext","createContext","FoodsProvider","children","state","dispatch","userTokenData","setUserToken","foodsData","setFoodsData","fetchFoods","console","log","localStorage","getItem","type","response","get","data","payload","error","message","fetchSingleFood","singleFood","updateSort","e","value","target","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useFoodsContext"],"sources":["/home/frankessien/myworkspace/food-delivery-api/frontend/src/context/foods_context.js"],"sourcesContent":["/* trunk-ignore-all(prettier) */\nimport axios from 'axios'\n// import cookieParser from 'cookie-parser'\n\nimport React, { useContext, useEffect, useReducer, useState } from 'react'\n\nimport {\n  foods_url as url,\n  single_food_url as single_url\n} from '../utils/constants'\n\nimport {\n  GET_FOODS_BEGIN,\n  GET_FOODS_SUCCESS,\n  GET_SINGLE_FOOD_SUCCESS,\n  GET_SINGLE_FOOD_BEGIN,\n  GET_SINGLE_FOOD_ERROR,\n  SEARCH_FOODS,\n  GET_FOODS_ERROR,\n  UPDATE_SORT\n} from '../actions.js'\nimport foods_reducer from '../reducers/foods_reducer'\n\n//set initial state that would be passed\nconst initialState = {\n  foods_loading: false,\n  foods_error: false,\n  foods: [],\n  single_food_error: false,\n  single_food_loading: false,\n  single_food: {}\n}\n\n//declare global context and  make it  Available Globally\n// also here, Set All  the Actions using Dispatch\nexport const FoodsContext = React.createContext()\n\n//creating FoodsProvider\nexport const FoodsProvider = ({ children }) => {\n  //pass in  reducerFunction , and  initial state Object\n  //NOTE:create and  import foodsReducer, so  you can  use  in  this useReducerFunction\n  const [state, dispatch] = useReducer(foods_reducer, initialState)\n  // const { token } = useAuthContext()\n  const [userTokenData, setUserToken] = useState(null)\n  const [foodsData, setFoodsData] = useState([])\n\n  //fetch Data from API   using axios\n\n  const fetchFoods = async () => {\n    console.log('TYPE 1 FOR TOKEN', typeof localStorage.getItem('token'))\n    //NOTE: convert  to  valid  json String Object: this would   would enable  possible read from  the Backend;\n    // if   allocated directly without  using  JSON.parse, it would  read \"null\"from  the  backend\n\n    // let retrievedToken = JSON.parse(localStorage.getItem('token'))\n\n    try {\n      dispatch({ type: GET_FOODS_BEGIN })\n\n      console.log(userTokenData)\n      // console.log(configuration)\n      const response = await axios.get(url)\n\n      const foods = response.data\n      console.log('FETCH FOODS  ', foods)\n      setFoodsData(foods)\n      dispatch({ type: GET_FOODS_SUCCESS, payload: foods })\n    } catch (error) {\n      console.log('TOKEN CALL TO API FROM   FOODS')\n\n      console.log('Error fetching foods', error.message)\n      dispatch({ type: GET_FOODS_ERROR, payload: error.message })\n    }\n  }\n  useEffect(() => {\n    fetchFoods()\n  }, [userTokenData])\n  //end here\n  const fetchSingleFood = async single_url => {\n    dispatch({ type: GET_SINGLE_FOOD_BEGIN })\n    try {\n      const response = await axios.get(single_url)\n      const singleFood = response.data\n\n      dispatch({ type: GET_SINGLE_FOOD_SUCCESS, payload: singleFood })\n      console.log('Single Food fetched', singleFood)\n    } catch (error) {\n      console.log('Single Food  Error', error.message)\n\n      dispatch({ type: GET_SINGLE_FOOD_ERROR, payload: error.message })\n    }\n  }\n  const updateSort = e => {\n    const value = e.target.value\n    console.log('Value from  sort  is', value)\n    dispatch({ type: UPDATE_SORT, payload: { value } })\n  }\n\n  console.log(\n    'Token after Mount from  foodContext ',\n\n    'USERtOKEN IS',\n    userTokenData\n  )\n\n  return (\n    <FoodsContext.Provider\n      value={{ ...state, fetchSingleFood, fetchFoods, updateSort, foodsData }}\n    >\n      {children}\n    </FoodsContext.Provider>\n  )\n}\n\n//to make  the Foods context Available Globally, export from here, make it Available\nexport const useFoodsContext = () => {\n  return useContext(FoodsContext)\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE1E,SACEC,SAAS,IAAIC,GAAG,EAChBC,eAAe,IAAIC,UAAU,QACxB,oBAAoB;AAE3B,SACEC,eAAe,EACfC,iBAAiB,EACjBC,uBAAuB,EACvBC,qBAAqB,EACrBC,qBAAqB,EACrBC,YAAY,EACZC,eAAe,EACfC,WAAW,QACN,eAAe;AACtB,OAAOC,aAAa,MAAM,2BAA2B;;AAErD;AACA,MAAMC,YAAY,GAAG;EACnBC,aAAa,EAAE,KAAK;EACpBC,WAAW,EAAE,KAAK;EAClBC,KAAK,EAAE,EAAE;EACTC,iBAAiB,EAAE,KAAK;EACxBC,mBAAmB,EAAE,KAAK;EAC1BC,WAAW,EAAE,CAAC;AAChB,CAAC;;AAED;AACA;AACA,OAAO,MAAMC,YAAY,GAAGzB,KAAK,CAAC0B,aAAa,CAAC,CAAC;;AAEjD;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7C;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,UAAU,CAACc,aAAa,EAAEC,YAAY,CAAC;EACjE;EACA,MAAM,CAACa,aAAa,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;;EAE9C;;EAEA,MAAM+B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IACrE;IACA;;IAEA;;IAEA,IAAI;MACFT,QAAQ,CAAC;QAAEU,IAAI,EAAE/B;MAAgB,CAAC,CAAC;MAEnC2B,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;MAC1B;MACA,MAAMU,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAACpC,GAAG,CAAC;MAErC,MAAMe,KAAK,GAAGoB,QAAQ,CAACE,IAAI;MAC3BP,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEhB,KAAK,CAAC;MACnCa,YAAY,CAACb,KAAK,CAAC;MACnBS,QAAQ,CAAC;QAAEU,IAAI,EAAE9B,iBAAiB;QAAEkC,OAAO,EAAEvB;MAAM,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAE7CD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEQ,KAAK,CAACC,OAAO,CAAC;MAClDhB,QAAQ,CAAC;QAAEU,IAAI,EAAEzB,eAAe;QAAE6B,OAAO,EAAEC,KAAK,CAACC;MAAQ,CAAC,CAAC;IAC7D;EACF,CAAC;EACD5C,SAAS,CAAC,MAAM;IACdiC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EACnB;EACA,MAAMgB,eAAe,GAAG,MAAMvC,UAAU,IAAI;IAC1CsB,QAAQ,CAAC;MAAEU,IAAI,EAAE5B;IAAsB,CAAC,CAAC;IACzC,IAAI;MACF,MAAM6B,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAAClC,UAAU,CAAC;MAC5C,MAAMwC,UAAU,GAAGP,QAAQ,CAACE,IAAI;MAEhCb,QAAQ,CAAC;QAAEU,IAAI,EAAE7B,uBAAuB;QAAEiC,OAAO,EAAEI;MAAW,CAAC,CAAC;MAChEZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEW,UAAU,CAAC;IAChD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEQ,KAAK,CAACC,OAAO,CAAC;MAEhDhB,QAAQ,CAAC;QAAEU,IAAI,EAAE3B,qBAAqB;QAAE+B,OAAO,EAAEC,KAAK,CAACC;MAAQ,CAAC,CAAC;IACnE;EACF,CAAC;EACD,MAAMG,UAAU,GAAGC,CAAC,IAAI;IACtB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5Bf,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEc,KAAK,CAAC;IAC1CrB,QAAQ,CAAC;MAAEU,IAAI,EAAExB,WAAW;MAAE4B,OAAO,EAAE;QAAEO;MAAM;IAAE,CAAC,CAAC;EACrD,CAAC;EAEDf,OAAO,CAACC,GAAG,CACT,sCAAsC,EAEtC,cAAc,EACdN,aACF,CAAC;EAED,oBACE/B,KAAA,CAAAqD,aAAA,CAAC5B,YAAY,CAAC6B,QAAQ;IACpBH,KAAK,EAAE;MAAE,GAAGtB,KAAK;MAAEkB,eAAe;MAAEZ,UAAU;MAAEc,UAAU;MAAEhB;IAAU,CAAE;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEvEhC,QACoB,CAAC;AAE5B,CAAC;;AAED;AACA,OAAO,MAAMiC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO5D,UAAU,CAACwB,YAAY,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module"}