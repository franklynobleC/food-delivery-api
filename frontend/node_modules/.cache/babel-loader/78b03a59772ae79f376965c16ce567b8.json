{"ast":null,"code":"var _jsxFileName = \"/home/frankessien/myworkspace/food-delivery-api/frontend/src/context/cart_context.js\";\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { create_orders_url, checkout_url } from '../utils/constants';\nimport cart_reducer from '../reducers/cart_reducer';\nimport { ADD_TO_CART, REMOVE_CART_ITEM, CLEAR_CART, COUNT_CART_TOTALS, CREATE_ORDER_BEGIN, CREATE_ORDER_SUCCESS, CREATE_ORDER_ERROR } from '../actions';\n\n//TODO: pass  this  to     cart state  in  initial State\nfunction getLocalStorageData() {\n  const localData = localStorage.getItem('cart');\n  return JSON.parse(localData);\n}\nconst initialState = {\n  cart: [],\n  total_quantity: 0,\n  total_price: 0,\n  payment_option: '',\n  delivery_fee: 0,\n  quantity: 2,\n  is_order_created_success: false,\n  is_order_error: false,\n  is_loading: false\n};\n\n// In   Context  is a feature that allows you to\n//  share data between components without passing it\n//  through intermediate components explicitly.It\n//  provides a way to pass data down the component\n//  tree without the need for prop drilling.\n\nconst CartContext = React.createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(cart_reducer, initialState);\n  const [userTokenData, setUserToken] = useState({});\n  const [cart1, setCart] = useState([]);\n\n  //add to  cart function\n  const addToCart = (id, quantity, food) => {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        id,\n        quantity,\n        food\n      }\n    });\n  };\n  //remove an  item from  cart\n  const removeItem = id => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: id\n    });\n  };\n  //clear  the entire  cart\n  const clearCart = () => {\n    dispatch({\n      type: CLEAR_CART\n    });\n  };\n  const createOrder = async (cart, id, paymentoption, delivery_fee) => {\n    dispatch({\n      type: CREATE_ORDER_BEGIN\n    });\n    let retrievedToken = JSON.parse(localStorage.getItem('token'));\n    const CartItems = JSON.parse(localStorage.getItem('cart'));\n    setCart(CartItems);\n    console.log('GETING CART', cart1, 'cart items', CartItems);\n    setUserToken(retrievedToken);\n    console.log('THIS IS FROM CREAT ORDER  POST REQUEEST  TO BACKEND', cart, id, delivery_fee);\n    console.log('ABOVE DETAILS FOR  CREATED ORDER BEGIN!!');\n    const configuration = {\n      method: 'post',\n      url: create_orders_url,\n      headers: {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem('token'))}`\n      },\n      data: {\n        OrderItems: cart,\n        _id: id,\n        paymentOption: paymentoption,\n        deliveryFee: delivery_fee\n      }\n    };\n    try {\n      const response = await axios(configuration);\n      const createdOrder = (await response.data) && response.statuscode === 201;\n      console.log('CREATED ORDER SUCCESS');\n      console.log('ORDER SUCCESS MESSAGE', await createOrder.data);\n      dispatch({\n        type: CREATE_ORDER_SUCCESS,\n        payload: createdOrder\n      });\n    } catch (error) {\n      console.log('CREATE ORDERS ERROR');\n      console.log(error);\n      dispatch({\n        type: CREATE_ORDER_ERROR,\n        payload: error.response.message\n      });\n    }\n  };\n  const checkOut = async () => {\n    try {\n      const response = await axios.get(checkout_url);\n      const data = await response.data;\n      console.log('response Payment url Link', data);\n      setTimeout(() => {\n        data ? window.location.href = data : '';\n      }, 2000);\n    } catch (err) {\n      console.log('error', err);\n    }\n  };\n\n  //clear  from  local storage\n  const clearFromLocalStorage = () => {\n    localStorage.removeItem('cart');\n    state.total_quantity = 0;\n    state.totalPrice = 0;\n    localStorage.clear();\n  };\n  useEffect(() => {\n    //dispatch this when  component mounts\n    // dispatch({ type: COUNT_CART_TOTALS })\n    console.log('check cart STATE', state.cart);\n    if (state.cart !== null) {\n      dispatch({\n        type: COUNT_CART_TOTALS\n      });\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n      console.log(console.log(localStorage.getItem('cart')));\n    }\n\n    //also, adding  to  the Dependency array, so it would remount when  item  in  the component  is changed\n  }, [state.cart, JSON.parse(JSON.stringify(localStorage.getItem('token')), state.totalPrice, state.total_quantity, localStorage.getItem('userId'))]);\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      ...state,\n      addToCart,\n      clearCart,\n      removeItem,\n      createOrder,\n      checkOut,\n      clearFromLocalStorage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n//\nexport const useCartContext = () => {\n  return useContext(CartContext);\n};","map":{"version":3,"names":["axios","React","useContext","useEffect","useReducer","useState","create_orders_url","checkout_url","cart_reducer","ADD_TO_CART","REMOVE_CART_ITEM","CLEAR_CART","COUNT_CART_TOTALS","CREATE_ORDER_BEGIN","CREATE_ORDER_SUCCESS","CREATE_ORDER_ERROR","getLocalStorageData","localData","localStorage","getItem","JSON","parse","initialState","cart","total_quantity","total_price","payment_option","delivery_fee","quantity","is_order_created_success","is_order_error","is_loading","CartContext","createContext","CartProvider","children","state","dispatch","userTokenData","setUserToken","cart1","setCart","addToCart","id","food","type","payload","removeItem","clearCart","createOrder","paymentoption","retrievedToken","CartItems","console","log","configuration","method","url","headers","Authorization","data","OrderItems","_id","paymentOption","deliveryFee","response","createdOrder","statuscode","error","message","checkOut","get","setTimeout","window","location","href","err","clearFromLocalStorage","totalPrice","clear","setItem","stringify","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useCartContext"],"sources":["/home/frankessien/myworkspace/food-delivery-api/frontend/src/context/cart_context.js"],"sourcesContent":["import axios from 'axios'\n\nimport React, { useContext, useEffect, useReducer, useState } from 'react'\nimport { create_orders_url, checkout_url } from '../utils/constants'\nimport cart_reducer from '../reducers/cart_reducer'\nimport {\n  ADD_TO_CART,\n  REMOVE_CART_ITEM,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  CREATE_ORDER_BEGIN,\n  CREATE_ORDER_SUCCESS,\n  CREATE_ORDER_ERROR\n} from '../actions'\n\n//TODO: pass  this  to     cart state  in  initial State\nfunction getLocalStorageData () {\n  const localData = localStorage.getItem('cart')\n\n  return JSON.parse(localData)\n}\n\nconst initialState = {\n  cart: [],\n  total_quantity: 0,\n  total_price: 0,\n  payment_option: '',\n  delivery_fee: 0,\n  quantity: 2,\n  is_order_created_success: false,\n  is_order_error: false,\n  is_loading: false\n}\n\n// In   Context  is a feature that allows you to\n//  share data between components without passing it\n//  through intermediate components explicitly.It\n//  provides a way to pass data down the component\n//  tree without the need for prop drilling.\n\nconst CartContext = React.createContext()\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cart_reducer, initialState)\n\n  const [userTokenData, setUserToken] = useState({})\n  const [cart1, setCart] = useState([])\n\n  //add to  cart function\n  const addToCart = (id, quantity, food) => {\n    dispatch({ type: ADD_TO_CART, payload: { id, quantity, food } })\n  }\n  //remove an  item from  cart\n  const removeItem = id => {\n    dispatch({ type: REMOVE_CART_ITEM, payload: id })\n  }\n  //clear  the entire  cart\n  const clearCart = () => {\n    dispatch({ type: CLEAR_CART })\n  }\n\n  const createOrder = async (cart, id, paymentoption, delivery_fee) => {\n    dispatch({ type: CREATE_ORDER_BEGIN })\n    let retrievedToken = JSON.parse(localStorage.getItem('token'))\n    const CartItems = JSON.parse(localStorage.getItem('cart'))\n    setCart(CartItems)\n    console.log('GETING CART', cart1, 'cart items', CartItems)\n\n    setUserToken(retrievedToken)\n\n    console.log(\n      'THIS IS FROM CREAT ORDER  POST REQUEEST  TO BACKEND',\n      cart,\n      id,\n\n      delivery_fee\n    )\n    console.log('ABOVE DETAILS FOR  CREATED ORDER BEGIN!!')\n    const configuration = {\n      method: 'post',\n      url: create_orders_url,\n      headers: {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem('token'))}`\n      },\n      data: {\n        OrderItems: cart,\n        _id: id,\n        paymentOption: paymentoption,\n\n        deliveryFee: delivery_fee\n      }\n    }\n\n    try {\n      const response = await axios(configuration)\n\n      const createdOrder = (await response.data) && response.statuscode === 201\n\n      console.log('CREATED ORDER SUCCESS')\n      console.log('ORDER SUCCESS MESSAGE', await createOrder.data)\n\n      dispatch({ type: CREATE_ORDER_SUCCESS, payload: createdOrder })\n    } catch (error) {\n      console.log('CREATE ORDERS ERROR')\n      console.log(error)\n      dispatch({\n        type: CREATE_ORDER_ERROR,\n        payload: error.response.message\n      })\n    }\n  }\n  const checkOut = async () => {\n    try {\n      const response = await axios.get(checkout_url)\n\n      const data = await response.data\n\n      console.log('response Payment url Link', data)\n      setTimeout(() => {\n        data ? (window.location.href = data) : ''\n\n}, 2000)\n    } catch (err) {\n      console.log('error', err)\n    }\n  }\n\n  //clear  from  local storage\n  const clearFromLocalStorage = () => {\n    localStorage.removeItem('cart')\n    state.total_quantity = 0\n    state.totalPrice = 0\n    localStorage.clear()\n  }\n  useEffect(() => {\n    //dispatch this when  component mounts\n    // dispatch({ type: COUNT_CART_TOTALS })\n    console.log('check cart STATE', state.cart)\n\n    if (state.cart !== null) {\n      dispatch({ type: COUNT_CART_TOTALS })\n      localStorage.setItem('cart', JSON.stringify(state.cart))\n      console.log(console.log(localStorage.getItem('cart')))\n    }\n\n    //also, adding  to  the Dependency array, so it would remount when  item  in  the component  is changed\n  }, [\n    state.cart,\n    JSON.parse(\n      JSON.stringify(localStorage.getItem('token')),\n      state.totalPrice,\n      state.total_quantity,\n      localStorage.getItem('userId')\n    )\n  ])\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        addToCart,\n        clearCart,\n        removeItem,\n        createOrder,\n        checkOut,\n        clearFromLocalStorage\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  )\n}\n\n//\nexport const useCartContext = () => {\n  return useContext(CartContext)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}